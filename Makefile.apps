ifeq ($(PROJECT),)
PROJECT = $(shell gcloud config get-value core/project)
endif

ifeq ($(PROJECT),neco-test)
	CRON_BASE = $(CURDIR)/pkg/necogcp-app/cron-neco-test.yaml
else
	CRON_BASE = $(CURDIR)/pkg/necogcp-app/cron-user.yaml
endif

NUM_VERSIONS = $(shell gcloud app versions list --project $(PROJECT) --format list | wc -l)
CRON_YAML = $(CURDIR)/pkg/necogcp-app/cron.yaml

all:
	@echo "Specify one of these targets:"
	@echo
	@echo "    PROJECT=neco-test create    - Deploy GAE app on neco-test"
	@echo "    PROJECT=neco-test destroy   - Destroy all version of GAE app on neco-test"


./.necogcp.yml: $(HOME)/.necogcp.yml
	if [ "$(PROJECT)" != "neco-test" ]; then \
		rm -f $@; \
		cp $< $@; \
	fi

$(CRON_YAML): $(CRON_BASE)
	rm -f $@
	cp $< $@

create: clean ./.necogcp.yml $(CRON_YAML)
	gcloud app deploy \
		--project $(PROJECT) \
		--quiet \
		--promote \
		--stop-previous-version \
		$(CURDIR)/pkg/necogcp-app/app.yaml \
		$(CRON_YAML)

destroy:
	# delete old versions
	if [ "$(NUM_VERSIONS)" -gt 1 ]; then \
		gcloud app versions list \
			--project $(PROJECT) \
			--sort-by=LAST_DEPLOYED \
			--limit $(shell expr $(NUM_VERSIONS) - 1) \
			--format="value(version.id)" | \
			xargs gcloud app versions delete --quiet; \
	fi
	# stop serving instances
	gcloud app versions list \
		--project $(PROJECT) \
		--filter="SERVING_STATUS:SERVING" \
		--format="value(version.id)" | \
		xargs gcloud app versions stop --quiet

clean:
	rm -f ./.necogcp.yml $(CRON_YAML)

.PHONY:	all clean create destroy
